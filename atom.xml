<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逝殇_Vizard...</title>
  <subtitle>我以为人生很漫长,匆匆翻看,却再也无法逆转</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-16T13:38:59.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>_Vizard战国</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node.js简单爬虫</title>
    <link href="http://yoursite.com/2017/05/16/Node-js%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"/>
    <id>http://yoursite.com/2017/05/16/Node-js简单爬虫/</id>
    <published>2017-05-16T13:22:42.000Z</published>
    <updated>2017-05-16T13:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1494951406852&amp;di=367280f924db4e53682be228cea63f93&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.7xz.com%2Fimg%2Fpicimg%2F201612%2F20161230153304_954cb14589aa8cb8868.jpg" alt=""><br>最近在看 Node.js的书,不得不佩服作者的创造力;遂踩着前人的脚印<br>及时充电,手把手教你写一个简单的爬虫;</p>
<h3 id="准备好了吗-撒-一库哟"><a href="#准备好了吗-撒-一库哟" class="headerlink" title="准备好了吗 撒,一库哟"></a>准备好了吗 撒,一库哟</h3><pre><code>cd 到你的Coding 目录下
新建一个文件夹
接着进入这个文件夹中,安装 express
npm install express --registry=https://registry.npm.taobao.org
npm install superagent --save
npm install cheerio --save
touch app.js
</code></pre><h4 id="superagent-和-cheerio是什么"><a href="#superagent-和-cheerio是什么" class="headerlink" title="superagent 和 cheerio是什么?"></a>superagent 和 cheerio是什么?</h4><p>superagent它是一个强大并且可读性很好的轻量级ajaxAPI，<br>是一个关于HTTP方面的一个库，而且它可以将链式写法玩的出神入化。<br>可以理解成一个 Node.js 版的 jquery，<br>用来从网页中以 css selector 取数据，使用方式跟 jquery 一样一样的。</p>
<h5 id="接下来就是在-app-js-中写代码了-准备工作已经完成-比如这里爬取的是-cNodejs-优秀的-node-社区"><a href="#接下来就是在-app-js-中写代码了-准备工作已经完成-比如这里爬取的是-cNodejs-优秀的-node-社区" class="headerlink" title="接下来就是在 app.js 中写代码了,准备工作已经完成,比如这里爬取的是 cNodejs(优秀的 node 社区)"></a>接下来就是在 app.js 中写代码了,准备工作已经完成,比如这里爬取的是 cNodejs(优秀的 node 社区)</h5><pre><code>var express = require(&apos;express&apos;);
var superagent = require(&apos;superagent&apos;);
var cheerio = require(&apos;cheerio&apos;);


var app = express();

app.get(&apos;/&apos;, function(req, res, next) {
 // 用 superagent 去抓取 https://cnodejs.org/ 的内容
superagent.get(&apos;https://cnodejs.org/&apos;)
  .end(function(err, sres) {
    // 常规的错误处理
    if (err) {
      return next(err);
    }
    var items = [];
    // sres.text 里面存储着网页的 html 内容，将它传给 cheerio.load，习惯性地命名为 `$`
    // 接下来就可以使用熟悉的 jquery 操作了
    var $ = cheerio.load(sres.text);
    $(&apos;#topic_list .cell&apos;).each(function(index, element) {
      var $img = $(element).find(&apos;img&apos;);
      var $topic = $(element).find(&apos;.topic_title&apos;);
      items.push({
        author: $img.attr(&apos;title&apos;),
        title: $topic.attr(&apos;title&apos;),
        href: $topic.attr(&apos;href&apos;)
      });
    });
    res.send(items);
  });
});

app.listen(3000, function() {
 console.log(&apos;app is listening at port 3000&apos;);
});
</code></pre><h4 id="接着上面的终端里输入-node-app-js"><a href="#接着上面的终端里输入-node-app-js" class="headerlink" title="接着上面的终端里输入 node app.js"></a>接着上面的终端里输入 node app.js</h4><p>然后就可以在<a href="http://localhost:3000中看到抓取的数据了" target="_blank" rel="external">http://localhost:3000中看到抓取的数据了</a><br>如下图所示:<br><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1ffnj88n5d8j30s2122dmg.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1494951406852&amp;amp;di=367280f924db4e53682be228ce
    
    </summary>
    
      <category term="开发技术" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="NodeJS" scheme="http://yoursite.com/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>永恒之蓝(勒索蠕虫)修复指南</title>
    <link href="http://yoursite.com/2017/05/15/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D-%E5%8B%92%E7%B4%A2%E8%A0%95%E8%99%AB-%E4%BF%AE%E5%A4%8D%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2017/05/15/永恒之蓝-勒索蠕虫-修复指南/</id>
    <published>2017-05-15T11:57:46.000Z</published>
    <updated>2017-05-15T12:16:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1494860682820&amp;di=0f1fb4769f245c3ebba2960ff4653627&amp;imgtype=0&amp;src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fw%253D580%2Fsign%3D6e5b3ae0af345982c58ae59a3cf5310b%2F26508435e5dde7116969ed62a5efce1b9c16619a.jpg" alt=""><br>本次威胁主要影响以下操作系统: 桌面版本操作系统:</p>
<pre><code>Windows 2000
Windows XP
Windows Vista
Windows7
Windows8
Windows8.1
Windows10
</code></pre><p>为了确保周一开机时公司电脑和服务器免遭病毒感染或避免更大范围的传播，<br>技术部制定了本文档，用于指导公司小伙伴 根据指南内容进行安全操作。<br>我们选用了 360 勒索蠕虫漏洞修复工具，此修复工具集成免疫、 SMB 服务关闭和各系统下 MS17-010 漏洞检测与修复于一体。<br>可在离线网络环境下一键式修复系统存在的 MS17-010 漏洞，根本解决勒索蠕虫利用 MS17-010 漏洞带来的安全隐患。<br>另外近期网络安全事故频发，Windows 电脑需要安装金山毒霸或者 360 杀毒。</p>
<h4 id="第一步、修复工具及补丁包安装"><a href="#第一步、修复工具及补丁包安装" class="headerlink" title="第一步、修复工具及补丁包安装:"></a>第一步、修复工具及补丁包安装:</h4><p>公司内网下载:点击下载 xxx.zip (公司内网地址)<br>外网下载: 点击下载 <a href="http://down.b.360.cn/EternalBlueFix.zip" target="_blank" rel="external">http://down.b.360.cn/EternalBlueFix.zip</a> 下图为补丁包目录，根据自己系统版本和位数进行选择安装。<br><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffmaxcc6djj30oo0iw79x.jpg" alt=""></p>
<h4 id="二、关闭-445-端口操作。"><a href="#二、关闭-445-端口操作。" class="headerlink" title="二、关闭 445 端口操作。"></a>二、关闭 445 端口操作。</h4><p>在 Windows 系统右键点击“我的电脑”，在“服务和应用程序”下的服务项中双击“Server”，<br>在出现的 Server 属性 页面中对“启动类型”选择禁用，并点击“停止”按钮关闭服务。<br>操作成功后，建议重启系统以确保生效。</p>
<p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffmazv3zrrj30u00ieted.jpg" alt=""></p>
<h4 id="三、关闭-139-端口操作"><a href="#三、关闭-139-端口操作" class="headerlink" title="三、关闭 139 端口操作"></a>三、关闭 139 端口操作</h4><pre><code>1、右键任务栏网络图标或开打控制面板找到“网络与共享中心”选项;
2、点击“更改适配器设置”;
3、右键本地连接或无线连接的“属性”;
4、打开”Intelnet 协议版本 4(TCP/IPV4)”，可参加下图操作步骤。
最后一定要点击“确定”进行保存操作。
</code></pre><p><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffmb2fxbisj31380nkafr.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1494860682820&amp;amp;di=0f1fb4769f245c3ebba2960ff4
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>fastlane的使用</title>
    <link href="http://yoursite.com/2017/05/12/fastlane%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/05/12/fastlane的使用/</id>
    <published>2017-05-12T12:41:51.000Z</published>
    <updated>2017-05-12T14:22:38.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="对于一个iOS-APP的发布上线，一般来说都需要经历"><a href="#对于一个iOS-APP的发布上线，一般来说都需要经历" class="headerlink" title="对于一个iOS APP的发布上线，一般来说都需要经历:"></a>对于一个iOS APP的发布上线，一般来说都需要经历:</h4><p>编译打包 -&gt; 截图 -&gt; 填写一些说明文字 -&gt; 上传ipa到itunes connect -&gt; 提交供审核。<br>每次都要进行这么多“繁琐”的步骤，对于某些步骤可能一次还不能执行成功需要等着界面提示上传错误然后手动重新再来一次。</p>
<p>在日常开发中，打包也是最后上线不可缺少的环节，如果需要生成ipa文件通常需要在Xcode里<br>点击Product -&gt; Archive，然后在弹出来的Organizer中选择导出什么类型(ad hoc/enterprise)的包。对于大项目来说动辄编译十分钟以上的来说，一天打几个包就差不多过去了。</p>
<p>为了解决这些问题，Felix Krause大神写了一个工具集fastlane。<br>fastlane是一套使用Ruby写的自动化工具集，用于iOS和Android自动化打包和发布.</p>
<p><img src="http://blog.devzeng.com/images/ios-fastlane-in-action/fastlane-logo.png" alt="image"></p>
<h2 id="fastlane-的安装"><a href="#fastlane-的安装" class="headerlink" title="fastlane 的安装"></a>fastlane 的安装</h2><h4 id="1-首先确保安装的-xcode-命令行是最新的"><a href="#1-首先确保安装的-xcode-命令行是最新的" class="headerlink" title="1.首先确保安装的 xcode 命令行是最新的"></a>1.首先确保安装的 xcode 命令行是最新的</h4><p>   如果尚未安装可使用下面命令安装</p>
<pre><code>xcode-select --install
</code></pre><h4 id="2-安装fastlane"><a href="#2-安装fastlane" class="headerlink" title="2.安装fastlane"></a>2.安装fastlane</h4><pre><code>    sudo gem install fastlane
部分人的mac会提示
*ERROR:  While executing gem ... (Errno::EPERM)
               Operation not permitted - /usr/bin/rougify
               *
</code></pre><p>  原因正如提示所说,可以使用下面的命令进行安装</p>
<pre><code>sudo gem install -n /usr/local/bin fastlane
</code></pre><h4 id="当出现如下一大坨时候表示安装成功了"><a href="#当出现如下一大坨时候表示安装成功了" class="headerlink" title="当出现如下一大坨时候表示安装成功了."></a>当出现如下一大坨时候表示安装成功了.</h4><p> <img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffivh5ki06j30wi0p4gue.jpg" alt=""></p>
<h4 id="3-fastlane组件"><a href="#3-fastlane组件" class="headerlink" title="3.fastlane组件"></a>3.fastlane组件</h4><p> fastlane是一个工具集，包含了我们日常开发中上线时需要的大部分操作。比如gym/deliver等。下面对每个工具进行介绍：</p>
<pre><code>名称    说明
deliver    自动上传截图，APP的元数据，二进制(ipa)文件到iTunes Connect
snapshot    自动截图（基于Xcode7的UI test）
frameit    可以把截的图片自动套上一层外边框
pem    自动生成、更新推送配置文件
 sigh    用来创建、更新、下载、修复Provisioning Profile的工具
 produce    如果你的产品还没在iTunes Connect(iTC)或者Apple Developer Center(ADC)建立，produce可以自动帮你完成这些工作
 cert    自动创建管理iOS代码签名证书
 pilot    管理TestFlight的测试用户，上传二进制文件
 boarding    建立一个添加测试用户界面，发给测试者，可自行添加邮件地址，并同步到iTunes Connect(iTC)
gym    自动化编译打包工具
match    证书和配置文件管理工具
scan    自动运行测试工具，并且可以生成漂亮的HTML报告
</code></pre><h4 id="4-fastlane核心概念"><a href="#4-fastlane核心概念" class="headerlink" title="4.fastlane核心概念"></a>4.fastlane核心概念</h4><p>在运行fastlane命令行工具的时候，会读取当前目录下面的fastlane文件夹里面的Fastfile配置文件。里面定义了一个个的lane，下面是官方提供的一个示例：</p>
<pre><code>lane :beta do
increment_build_number
cocoapods
match
testflight
sh &quot;./customScript.sh&quot;
slack
end
</code></pre><p>像<em>increment_build_number</em>、<em>cocoapods</em>这样的一条命令都是一个action，<br>由这样的一个个action组成了一个lane（lane中可以调用其他的lane)。</p>
<h2 id="fastlane实战"><a href="#fastlane实战" class="headerlink" title="fastlane实战"></a>fastlane实战</h2><h4 id="1、初始化"><a href="#1、初始化" class="headerlink" title="1、初始化"></a>1、初始化</h4><p>在项目的根目录下面，执行fastlane init命令开始初始化。<br>在执行的过程中会要求填写一些项目的资料，如Apple ID等，fastlane会自动检测当前目录下项目的App Name和App Identifier，可以选择自行输入这些信息。初始化完成会在当前目录下面生成一个fastlane的文件夹。</p>
<p><img src="http://blog.devzeng.com/images/ios-fastlane-in-action/fastlane-init.png" alt=""></p>
<p>最重要的两个文件就是Appfile和Fastfile，主要的说明如下：</p>
<p>（1）Appfile里面存放了App的基本信息包括app_identifier、apple_id、team_id等，如果在init的时候输入了正确的apple_id和密码会自动获取team_id。</p>
<p>（2）Fastfile是最重要的一个文件，在这个里面可以编写和定制我们的自动化脚本，所有的流程控制功能都写在这个文件里面。</p>
<p>说明：</p>
<p>（1）如果在init的时候选择了在iTunes Connect创建App，那么fastlane会调用produce进行初始化，如果没有创建后续可以手动执行produce init进行创建。如果没有在初始化的时候选择执行produce流程当然deliver也不会执行，后面可以使用deliver init运行是一样的。</p>
<p>（2）在iTunes Connect中成功创建App之后，fastlane文件夹里面会生成一个Deliverfile的文件。Deliverfile文件主要是deliver的一些配置信息。</p>
<h4 id="2、Fastfile文件"><a href="#2、Fastfile文件" class="headerlink" title="2、Fastfile文件"></a>2、Fastfile文件</h4><p>Fastfile文件的主要结构如下所示：</p>
<pre><code>fastlane_version &quot;2.14.2&quot;
default_platform :ios

platform :ios do
before_all do
       cocoapods
  end

  lane :test do
  end

  lane :beta do
  end

  lane :release do
  end

  after_all do |lane|

  end

  error do |lane, exception|

          end
end
</code></pre><p>说明：</p>
<p>（1）fastlane_version：指定fastlane使用的最小版本<br>（2）default_platform：指定当前默认的平台，可以选择ios/android/mac<br>（3）before_all：在执行每一个lane之前都会调用这部分的内容<br>（4）after_all：在每个lane执行完成之后都会执行这部分的内容<br>（5）error：每个lane执行出错就会执行这部分的内容<br>（6）desc：对lane的描述，fastlane会自动将desc的内容生成说明文档<br>（7）lane：定义一个lane(任务)，可以理解为一个函数，我们在执行的时候使用fastlane [ios] lane名称</p>
<h4 id="3、Fastfile文件的编写"><a href="#3、Fastfile文件的编写" class="headerlink" title="3、Fastfile文件的编写"></a>3、Fastfile文件的编写</h4><pre><code>lane :release do |option|
#根据传入参数version设置app的版本号
increment_version_number(version_number: option[:version])
#自动增加build号
increment_build_number
#证书签名
sigh
#编译打包
scheme_name = option[:scheme]
configuration = &apos;Release&apos;
version = get_info_plist_value(path: &quot;./#{scheme_name}/Info.plist&quot;, key: &quot;CFBundleShortVersionString&quot;)
build = get_info_plist_value(path: &quot;./#{scheme_name}/Info.plist&quot;, key: &quot;CFBundleVersion&quot;)
output_directory = File.expand_path(&quot;..&quot;, Dir.pwd) + File::Separator + &apos;build&apos;
output_name = &quot;#{scheme_name}_#{configuration}_#{version}_#{build}_#{Time.now.strftime(&apos;%Y%m%d%H%M%S&apos;)}.ipa&quot;
gym(scheme: scheme_name, clean: true, export_method:&apos;appstore&apos;, configuration: configuration, output_directory: output_directory, output_name: output_name)
 end
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;对于一个iOS-APP的发布上线，一般来说都需要经历&quot;&gt;&lt;a href=&quot;#对于一个iOS-APP的发布上线，一般来说都需要经历&quot; class=&quot;headerlink&quot; title=&quot;对于一个iOS APP的发布上线，一般来说都需要经历:&quot;&gt;&lt;/a&gt;对于一个iOS
    
    </summary>
    
      <category term="开发技术" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS 开发" scheme="http://yoursite.com/tags/iOS-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>惆怅甚至于迷茫</title>
    <link href="http://yoursite.com/2017/05/11/%E8%BF%99%E8%BF%B7%E9%9B%BE%E5%88%B0%E5%BA%95%E6%80%8E%E4%B9%88%E5%86%B2%E7%A0%B4/"/>
    <id>http://yoursite.com/2017/05/11/这迷雾到底怎么冲破/</id>
    <published>2017-05-11T09:05:00.000Z</published>
    <updated>2017-05-12T14:24:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>想不明白,这是不是也算一种遇人不淑</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想不明白,这是不是也算一种遇人不淑&lt;/p&gt;

    
    </summary>
    
      <category term="意乱情迷" scheme="http://yoursite.com/categories/%E6%84%8F%E4%B9%B1%E6%83%85%E8%BF%B7/"/>
    
    
      <category term="iOS 开发" scheme="http://yoursite.com/tags/iOS-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>iOS 10 Charles 抓 HTTPS 的包的</title>
    <link href="http://yoursite.com/2017/05/11/%E5%AE%89%E5%BE%97%E5%B9%BF%E5%8E%A6%E5%8D%83%E4%B8%87%E9%97%B4/"/>
    <id>http://yoursite.com/2017/05/11/安得广厦千万间/</id>
    <published>2017-05-11T08:50:15.000Z</published>
    <updated>2017-05-12T14:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这里只说与之前不同的地方-不说之前的-mobile-证书安装之类的"><a href="#这里只说与之前不同的地方-不说之前的-mobile-证书安装之类的" class="headerlink" title="这里只说与之前不同的地方,不说之前的 mobile 证书安装之类的:"></a>这里只说与之前不同的地方,不说之前的 mobile 证书安装之类的:</h3><h3 id="当你想-iOS10以下的一样设置完发现还是不能在-iOS10上抓-HTTPS-百感交集啊"><a href="#当你想-iOS10以下的一样设置完发现还是不能在-iOS10上抓-HTTPS-百感交集啊" class="headerlink" title="当你想 iOS10以下的一样设置完发现还是不能在 iOS10上抓 HTTPS 百感交集啊"></a>当你想 iOS10以下的一样设置完发现还是不能在 iOS10上抓 HTTPS 百感交集啊</h3><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h4><pre><code>来到设置-&gt;关于本机-&gt;证书信任设置
</code></pre><p><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffhqmimwyxj309w0hmdgc.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;这里只说与之前不同的地方-不说之前的-mobile-证书安装之类的&quot;&gt;&lt;a href=&quot;#这里只说与之前不同的地方-不说之前的-mobile-证书安装之类的&quot; class=&quot;headerlink&quot; title=&quot;这里只说与之前不同的地方,不说之前的 mobile 
    
    </summary>
    
      <category term="开发技术" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS 开发" scheme="http://yoursite.com/tags/iOS-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
